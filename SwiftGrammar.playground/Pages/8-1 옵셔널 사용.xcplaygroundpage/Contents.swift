"""
///옵셔널 사용
"""
/*
 옵셔널은 스위프트의 특징중 하나인 안전성을 문법으로 담보하는 기능 C언어 또는 Objective-C에서는 찾아볼수 없었던 콘셉트 이기도 하다
 옵셔널변수 또는 상수가 아니면 nil을 할당할수 없다
 한수형 프로그래밍 패러다임에서 자주 등장하는 모나드 개념과 동일하다
 옵셔널의 사용은 많은 의미를 축약하여 표험하는것과 같다.옵셔널을 읽을때 해당변수 또는 상수에는 값이 없을수 있다. 즉, 번수 또는 상수가 nil일수도 있으므로 사용에 주의하라는 뜻으로 직관적으로 받아들일수 있습니다. 값이 없는 윤셔널변수 또는 상수에 (강 재로) 접근하려면 런타임오류가 발생한다 그렇게되면 OS가 프로그램을 강제종료 시킬확률이 매우높다.
 */

/*
 ///오류가 발생하는 nil 할당
 var myName: String = "lucas"
 myName = nil //오류!
 */

/// 옵셔널 변수의 선언 및 nil할당
var myName: String? = "lucas"
print(myName) //yagom
// 옵셔널타입의값을 print한수를 뭉해 출력하면
// optional("lucas')이라고 출력되는 것이 정상입니다. 다만, 차후의 주석 표현의 편의를 위하여
// Optional()은 생략하고 값만 표기하도록하겠습니다.
// 또,옵셔널타입의 값을 print함수의매개 번수로전달하면 컴파일러경고가 발생할수 있다.
myName = nil
print(myName)

